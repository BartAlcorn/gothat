version: '3'

tasks:
  templ:
    desc: templ generate -watch without opening a browser window
    cmds:
      - templ generate -watch -path ./pkg -proxy="http://localhost:9090" --proxyport="9191" -open-browser=false

  templB:
    desc: templ generate -watch and auto opens a browser window
    cmds:
      - templ generate -watch -path ./pkg -proxy="http://localhost:9090" --proxyport="9191" -open-browser=true -v

  css:
    desc: generate tailwind css
    cmds:
      - npx tailwindcss -i ./pkg/embedded/assets/css/tailwind.css -o ./pkg/embedded/assets/css/styles.css --watch

  cssNW:
    desc: generate tailwind css WITHOUT the watcher (stand alone)
    cmds:
      - npx tailwindcss -i ./pkg/embedded/assets/css/tailwind.css -o ./pkg/embedded/assets/css/styles.css

  air:
    desc: hot reloading of GO, this task is needed for the combined `dev` task
    cmds:
      - air

  dev:
    desc: run tailwind, templ and air concurrently   <- this is the main dev server task
    deps: [css, templ, air]

  build:
    desc: build GO application
    cmds:
      - CGO_ENABLED=0 go build -o ./main -tags lambda.norpc ./cmd/app/main.go

  updair:
    desc: install or update air
    cmds:
      - go install github.com/air-verse/air@latest

  updtempl:
    desc: install or update templ
    cmds:
      - go get -u github.com/a-h/templ
      - go install github.com/a-h/templ/cmd/templ@latest

  updtailwind:
    desc: install or update tailwind
    cmds:
      - npm install tailwindcss@next @tailwindcss/cli@next

  # default:
  #   - task: live

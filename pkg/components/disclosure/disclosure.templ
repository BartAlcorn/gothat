package disclosure

import (
	"fmt"
	"github.com/bartalcorn/lucide"
)

type Props struct {
	// ID of the expandable
	ID string // default: ""

	// Title, the main title on the header
	Title string // required

	// Open default state of the expandable
	Open bool // default: false

	// Class, additional css classes
	Class string // default: ""

	// Content interior content, here or via children
	Content templ.Component // default: nil

	// Header total Header replacement component
	Header templ.Component // default: nil

	// HeaderContent additional header content, e.g. toolbars
	HeaderContent templ.Component // default: nil

	// LeftHeaderContent additional header content, displayed BEFORE the chevron
	LeftHeaderContent templ.Component // default: nil

	// OuterPadding, padding inside the drawer, outside the content
	OuterPadding string // default: "p-4"
}

// isOpen return the string value of bool Open
func (p *Props) isOpen() string {
	return fmt.Sprintf("%t", p.Open)
}

// Padding results the supplied or default value for padding
func (p *Props) Padding() string {
	if p.OuterPadding != "" {
		return p.OuterPadding
	}
	return " p-4"
}

templ Disclosure(props *Props) {
	<div
		if props.ID !="" {
			id={ props.ID }
		}
		class={ "flex flex-col w-full" , props.Class }
		x-data={ "{ isOpen: " + props.isOpen() + " }" }
	>
		<div x-disclosure x-model="isOpen">
			<div x-disclosure:button>
				if props.Header != nil {
					@props.Header
				} else {
					@header(props)
				}
			</div>
			<div
				x-disclosure:panel
				x-collapse
				if props.LeftHeaderContent != nil {
					class="pl-8"
				}
			>
				<div class={ props.Padding() }>
					{ children... }
					if props.Content != nil {
						@props.Content
					}
				</div>
			</div>
		</div>
	</div>
}

templ header(props *Props) {
	<div
		class="flex flex-row cursor-pointer items-center h-[40px] gap-2 p-2 w-full hover:text-blue-400 hover:bg-gray-50 transition-colors"
	>
		if props.LeftHeaderContent != nil {
			@props.LeftHeaderContent
		}
		<div
			class="text-base duration-300"
			:class="$disclosure.isOpen ? 'rotate-90 duration-300 text-blue-600' : ''"
		>
			@lucide.ChevronRight(lucide.Props{})
		</div>
		<div class="flex flex-row items-center justify-between w-full flex-nowrap">
			<span
				class="text-base hover:text-blue-400"
				:class="$disclosure.isOpen ? 'text-blue-600' : ''"
			>
				{ props.Title }
				if props.ID != "" {
					<span id={ props.ID + "-count" }></span>
				}
			</span>
			if props.HeaderContent != nil {
				@props.HeaderContent
			}
		</div>
	</div>
}
